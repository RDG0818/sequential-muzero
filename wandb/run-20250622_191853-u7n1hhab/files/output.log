Ray cluster started. Available resources: {'CPU': 12.0, 'GPU': 1.0, 'node:__internal_head__': 1.0, 'node:172.23.48.184': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 4127118950.0, 'memory': 9629944218.0}
Waiting for actors to initialize and run one episode...
[36m(DataActor pid=4334)[0m (DataActor pid=4334) Initializing on CPU...
[36m(DataActor pid=4334)[0m (DataActor pid=4334) Setup complete.
[36m(LearnerActor pid=4330)[0m (Learner pid=4330) Initializing on GPU...
[36m(LearnerActor pid=4330)[0m (Learner pid=4330) Setup complete.
[36m(DataActor pid=4335)[0m (DataActor pid=4335) Initializing on CPU...[32m [repeated 5x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(DataActor pid=4335)[0m (DataActor pid=4335) Setup complete.[32m [repeated 5x across cluster][0m

Warmup phase...
  Buffer size: 1000/1000
Warmup complete. Starting main training loop.
Episodes: 1100 | Avg Return: -1427.00 | Avg Loss: 402.9133 | Time: 99.53s
Episodes: 1200 | Avg Return: -1339.72 | Avg Loss: 402.6221 | Time: 93.54s
Error in sys.excepthook:
Traceback (most recent call last):
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/linecache.py", line 46, in getlines
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/linecache.py", line 136, in updatecache
    with tokenize.open(fullname) as fp:
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/tokenize.py", line 396, in open
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/tokenize.py", line 365, in detect_encoding
    first = read_or_stop()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/tokenize.py", line 323, in read_or_stop
    return readline()
KeyboardInterrupt

Original exception was:
Traceback (most recent call last):
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2496, in device_get
    return tree_map(_device_get, x)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/tree_util.py", line 365, in tree_map
    return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/tree_util.py", line 365, in <genexpr>
    return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2457, in _device_get
    return toarray()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/array.py", line 430, in __array__
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/profiler.py", line 333, in wrapper
    return func(*args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/array.py", line 629, in _value
    self._npy_value = self._single_device_array_to_np_array()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ryan/toy_mazero/train.py", line 102, in <module>
    main()
  File "/home/ryan/toy_mazero/train.py", line 75, in main
    wandb.log(loss_dict, step=episodes_processed)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 449, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 436, in wrapper
    return func(self, *args, **kwargs)  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1982, in log
    self._log(data=data, step=step, commit=commit)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1705, in _log
    self._partial_history_callback(data, step, commit)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1532, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 695, in publish_partial_history
    item.value_json = json_dumps_safer_history(v)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 817, in json_dumps_safer_history
    return dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 776, in default
    obj, converted = json_friendly(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 590, in json_friendly
    obj = get_jax_tensor(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 405, in get_jax_tensor
    return jax.device_get(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2496, in device_get
    return tree_map(_device_get, x)
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x76cdd854fd90>
Traceback (most recent call last):
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/lib/service_connection.py", line 90, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/lib/service_connection.py", line 218, in teardown
    self._router.join()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt:
[0m
Exception ignored in atexit callback: <function shutdown at 0x76cdf8ad5360>
Traceback (most recent call last):
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 104, in wrapper
    return func(*args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/_private/worker.py", line 1979, in shutdown
    from ray.dag.compiled_dag_node import _shutdown_all_compiled_dags
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/dag/__init__.py", line 1, in <module>
    from ray.dag.dag_node import DAGNode
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/dag/dag_node.py", line 2, in <module>
    from ray.experimental.channel.auto_transport_type import AutoTransportType
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/experimental/channel/__init__.py", line 1, in <module>
    from ray.experimental.channel.cached_channel import CachedChannel
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/experimental/channel/cached_channel.py", line 4, in <module>
    from ray.experimental.channel.common import ChannelInterface
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 969, in get_code
  File "<frozen importlib._bootstrap_external>", line 1091, in path_stats
  File "<frozen importlib._bootstrap_external>", line 147, in _path_stat
KeyboardInterrupt:
