[32m2025-07-12 17:43:06[0m | [37mINFO[0m | [37mRay cluster started. Available resources: {'memory': 9146261914.0, 'GPU': 1.0, 'CPU': 12.0, 'node:172.23.48.184': 1.0, 'node:__internal_head__': 1.0, 'accelerator_type:G': 1.0, 'object_store_memory': 3919826534.0}[0m
[32m2025-07-12 17:43:15[0m | [37mINFO[0m | [37mWaiting for actors to initialize and run one episode...[0m
[36m(DataActor pid=431056)[0m [32m2025-07-12 17:43:20[0m | [37mINFO[0m | [37mInitializing on CPU...[0m
[36m(LearnerActor pid=431060)[0m [32m2025-07-12 17:43:23[0m | [37mINFO[0m | [37m(Learner pid=431060) Initializing on GPU...[0m
[36m(LearnerActor pid=431060)[0m [32m2025-07-12 17:43:35[0m | [37mINFO[0m | [37m(Learner pid=431060) Setup complete.[0m
[36m(DataActor pid=431062)[0m [32m2025-07-12 17:43:20[0m | [37mINFO[0m | [37mInitializing on CPU...[0m[32m [repeated 5x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(DataActor pid=431062)[0m [32m2025-07-12 17:43:35[0m | [37mINFO[0m | [37mSetup complete.[0m
[32m2025-07-12 17:43:41[0m | [37mINFO[0m | [37m
Warmup phase...[0m
  Buffer size: 1000/1000
[32m2025-07-12 17:43:47[0m | [37mINFO[0m | [37m
Warmup complete.
 Time Taken: 6.66 seconds.
 Starting main training loop.[0m
[32m2025-07-12 17:44:22[0m | [37mINFO[0m | [37mEpisodes: 100 | Avg Return: -86.71 | Avg Loss: 9.6008 | Time: 34.21s[0m
[32m2025-07-12 17:44:35[0m | [37mINFO[0m | [37mEpisodes: 200 | Avg Return: -87.35 | Avg Loss: 5.7874 | Time: 13.51s[0m
[32m2025-07-12 17:44:45[0m | [37mINFO[0m | [37mEpisodes: 300 | Avg Return: -88.00 | Avg Loss: 5.5366 | Time: 10.11s[0m
[32m2025-07-12 17:44:58[0m | [37mINFO[0m | [37mEpisodes: 400 | Avg Return: -87.87 | Avg Loss: 5.3771 | Time: 12.92s[0m
[32m2025-07-12 17:45:08[0m | [37mINFO[0m | [37mEpisodes: 500 | Avg Return: -87.94 | Avg Loss: 5.2894 | Time: 9.57s[0m
[32m2025-07-12 17:45:20[0m | [37mINFO[0m | [37mEpisodes: 600 | Avg Return: -103.89 | Avg Loss: 5.1896 | Time: 12.09s[0m
Traceback (most recent call last):
  File "/home/ryan/toy_mazero/train.py", line 523, in <module>
    main()
  File "/home/ryan/toy_mazero/train.py", line 508, in main
    wandb.log(episode_metrics)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 449, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 436, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1982, in log
    self._log(data=data, step=step, commit=commit)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1705, in _log
    self._partial_history_callback(data, step, commit)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1532, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 695, in publish_partial_history
    item.value_json = json_dumps_safer_history(v)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 817, in json_dumps_safer_history
    return dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 776, in default
    obj, converted = json_friendly(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 590, in json_friendly
    obj = get_jax_tensor(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 405, in get_jax_tensor
    return jax.device_get(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2496, in device_get
    return tree_map(_device_get, x)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/tree_util.py", line 365, in tree_map
    return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/tree_util.py", line 365, in <genexpr>
    return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2457, in _device_get
    return toarray()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/array.py", line 430, in __array__
    return np.asarray(self._value, dtype=dtype, **kwds)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/profiler.py", line 333, in wrapper
    return func(*args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/array.py", line 629, in _value
    self._npy_value = self._single_device_array_to_np_array()
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/ryan/toy_mazero/train.py", line 523, in <module>
    main()
  File "/home/ryan/toy_mazero/train.py", line 508, in main
    wandb.log(episode_metrics)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 449, in wrapper_fn
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 436, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1982, in log
    self._log(data=data, step=step, commit=commit)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1705, in _log
    self._partial_history_callback(data, step, commit)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 391, in wrapper
    return func(self, *args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/wandb_run.py", line 1532, in _partial_history_callback
    self._backend.interface.publish_partial_history(
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/interface/interface.py", line 695, in publish_partial_history
    item.value_json = json_dumps_safer_history(v)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 817, in json_dumps_safer_history
    return dumps(obj, cls=WandBHistoryJSONEncoder, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 776, in default
    obj, converted = json_friendly(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 590, in json_friendly
    obj = get_jax_tensor(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/util.py", line 405, in get_jax_tensor
    return jax.device_get(obj)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2496, in device_get
    return tree_map(_device_get, x)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/tree_util.py", line 365, in tree_map
    return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/tree_util.py", line 365, in <genexpr>
    return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/api.py", line 2457, in _device_get
    return toarray()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/array.py", line 430, in __array__
    return np.asarray(self._value, dtype=dtype, **kwds)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/profiler.py", line 333, in wrapper
    return func(*args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/jax/_src/array.py", line 629, in _value
    self._npy_value = self._single_device_array_to_np_array()
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x7ac9b4556170>
Traceback (most recent call last):
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/lib/service_connection.py", line 90, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/lib/service_connection.py", line 218, in teardown
    self._router.join()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/threading.py", line 1096, in join
    self._wait_for_tstate_lock()
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/threading.py", line 1116, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
KeyboardInterrupt:
Exception ignored in atexit callback: <function shutdown at 0x7ac9d5aad630>
Traceback (most recent call last):
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 104, in wrapper
    return func(*args, **kwargs)
  File "/home/ryan/miniconda3/envs/jaxmarl_env/lib/python3.10/site-packages/ray/_private/worker.py", line 1986, in shutdown
    time.sleep(0.5)
KeyboardInterrupt:
